<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Backup Input Path" xml:space="preserve">
    <value>Ruta de resplado de entrada</value>
  </data>
  <data name="Backup SFC Path" xml:space="preserve">
    <value>Ruta de resplado de trazabilidad</value>
  </data>
  <data name="Bool Field" xml:space="preserve">
    <value>Some Bool Field</value>
  </data>
  <data name="Browser Field" xml:space="preserve">
    <value>Some Browser Field</value>
  </data>
  <data name="Common" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Dropdown" xml:space="preserve">
    <value>Dropdown</value>
  </data>
  <data name="Dropdown Description 1" xml:space="preserve">
    <value>The value of the string field equals to the selected option text</value>
  </data>
  <data name="Dropdown Description 2" xml:space="preserve">
    <value>The value of the string field equals to the value of the selected KeyValuePair: Option A (A), Option B (B), Option C (C)</value>
  </data>
  <data name="Dropdown Description 3" xml:space="preserve">
    <value>The value of the integer field equals to the value of the selected KeyValuePair: Slow (10), Medium (50), Fast (100)</value>
  </data>
  <data name="Dropdown Field" xml:space="preserve">
    <value>Some Dropdown Field</value>
  </data>
  <data name="Dropdown Field 2" xml:space="preserve">
    <value>Some Dropdown Field 2</value>
  </data>
  <data name="Dropdown Field 3" xml:space="preserve">
    <value>Some Dropdown Field 3</value>
  </data>
  <data name="Enum Field" xml:space="preserve">
    <value>Some Other Field</value>
  </data>
  <data name="Example Description" xml:space="preserve">
    <value>Extended (probably redundant) description of Some Field, a text-based configuration</value>
  </data>
  <data name="Fast" xml:space="preserve">
    <value>Fast</value>
  </data>
  <data name="File Extension" xml:space="preserve">
    <value>Extensión del archivo</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="Input Path" xml:space="preserve">
    <value>Ruta de entrada</value>
  </data>
  <data name="Integer Field" xml:space="preserve">
    <value>Integer Field</value>
  </data>
  <data name="Keep Logs For Months" xml:space="preserve">
    <value>Mantener logs (meses)</value>
  </data>
  <data name="Less Common" xml:space="preserve">
    <value>Less Common</value>
  </data>
  <data name="Line_" xml:space="preserve">
    <value>Linea</value>
  </data>
  <data name="Logs &amp; Time" xml:space="preserve">
    <value>Logs y tiempo de respuesta</value>
  </data>
  <data name="Machine_" xml:space="preserve">
    <value>Maquina</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="Option A" xml:space="preserve">
    <value>Opcion A</value>
  </data>
  <data name="Option B" xml:space="preserve">
    <value>Opcion  B</value>
  </data>
  <data name="Option C" xml:space="preserve">
    <value>Opcion  X</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Otro</value>
  </data>
  <data name="Other Field" xml:space="preserve">
    <value>Some Enum Field</value>
  </data>
  <data name="Put Backup Input Path" xml:space="preserve">
    <value>Selecciona la ruta de resplado de entrada</value>
  </data>
  <data name="Put Backup SFC Path" xml:space="preserve">
    <value>Selecciona la ruta de resplado de trazabilidad</value>
  </data>
  <data name="Put File Extension" xml:space="preserve">
    <value>Selecciona la extensión del archivo</value>
  </data>
  <data name="Put File SFC Extension" xml:space="preserve">
    <value>Selecciona la extensión del archivo de respuesta</value>
  </data>
  <data name="Put Input Path" xml:space="preserve">
    <value>Selecciona la ruta de entrada</value>
  </data>
  <data name="Put Keep Logs For Months" xml:space="preserve">
    <value>Selecciona cuantos meses se mantendran los logs</value>
  </data>
  <data name="Put Line_" xml:space="preserve">
    <value>Selecciona la Linea correspondiente</value>
  </data>
  <data name="Put Machine_" xml:space="preserve">
    <value>Selecciona el tipo de maquina</value>
  </data>
  <data name="Put Repair Boards" xml:space="preserve">
    <value>Activar modo para tarjetas de reparación?</value>
  </data>
  <data name="Put Send Repair File" xml:space="preserve">
    <value>Enviar log de falla al servidor?</value>
  </data>
  <data name="Put SFC Path" xml:space="preserve">
    <value>Selecciona la ruta de trazabilidad (SFC)</value>
  </data>
  <data name="Put Sfc Timeout" xml:space="preserve">
    <value>Selecciona el tiempo limite de respuesta en segundos </value>
  </data>
  <data name="Put Station_" xml:space="preserve">
    <value>Selecciona la estacion correspondiente</value>
  </data>
  <data name="Put Window Timeout" xml:space="preserve">
    <value>Selecciona el tiempo para cerrar ventana Ok/Reparación</value>
  </data>
  <data name="Repair Boards" xml:space="preserve">
    <value>Tarjetas de reparación</value>
  </data>
  <data name="Send Repair File" xml:space="preserve">
    <value>Enviar archivo de reparacion (SFC)?</value>
  </data>
  <data name="SFC File Extension" xml:space="preserve">
    <value>Extensión del archivo de respuesta</value>
  </data>
  <data name="SFC Path" xml:space="preserve">
    <value>Ruta de trazabilidad (SFC)</value>
  </data>
  <data name="Sfc Timeout" xml:space="preserve">
    <value>Timeout para respuesta de SFC (s)</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>Slow</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>Estacion</value>
  </data>
  <data name="Station_" xml:space="preserve">
    <value>Estacion</value>
  </data>
  <data name="Text Field" xml:space="preserve">
    <value>Some Text FielD</value>
  </data>
  <data name="Window Timeout" xml:space="preserve">
    <value>Delay para cerrar ventana Ok/Reparación</value>
  </data>
</root>